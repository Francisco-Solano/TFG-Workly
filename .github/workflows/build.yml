name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and test Backend
        run: |
          cd BackEnd/TFG-Workly
          mvn clean test -Dspring.profiles.active=github -Dspring.datasource.url=jdbc:mysql://localhost:3306/workly_db -Dspring.datasource.username=${{ secrets.DB_USER }} -Dspring.datasource.password=${{ secrets.DB_PASSWORD }}

      - name: Set up Node.js and Install dependencies for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies for Frontend
        run: |
          cd FrontEnd/frontend
          npm install

      - name: Build Frontend
        run: |
          cd FrontEnd/frontend
          npm run build

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: ./BackEnd/TFG-Workly
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


